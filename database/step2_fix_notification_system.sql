-- ุงูุฎุทูุฉ ุงูุซุงููุฉ: ุญุฐู ูุฅุนุงุฏุฉ ุฅูุดุงุก ูุธุงู ุงูุฅุดุนุงุฑุงุช ุงูุจุฑูุฏูุฉ
-- ุชุงุฑูุฎ ุงูุฅูุดุงุก: 12-09-2025
-- ุจูุงุกู ุนูู ุงููุชุงุฆุฌ ุงูููุชุดูุฉ ูู ุงูุฎุทูุฉ ุงูุฃููู

-- ===================================
-- 1. ุญุฐู ุฌููุน ุงูู triggers ุงูููุฌูุฏุฉ
-- ===================================

DROP TRIGGER IF EXISTS trigger_notify_like ON public.user_likes;
DROP TRIGGER IF EXISTS trigger_notify_like_response ON public.likes;
DROP TRIGGER IF EXISTS trigger_notify_new_message ON public.messages;
DROP TRIGGER IF EXISTS trigger_notify_profile_view ON public.profile_views;
DROP TRIGGER IF EXISTS trigger_notify_user_like ON public.likes;

-- ===================================
-- 2. ุญุฐู ุฌููุน ุงูุฏูุงู (ุณูุญุฐููุง ุจุงูููุฉ ูุน CASCADE)
-- ===================================

-- ุญุฐู ุฏูุงู ุงูุฅุดุนุงุฑุงุช
DROP FUNCTION IF EXISTS notify_user_like() CASCADE;
DROP FUNCTION IF EXISTS notify_profile_view() CASCADE;
DROP FUNCTION IF EXISTS notify_new_message() CASCADE;
DROP FUNCTION IF EXISTS notify_new_match() CASCADE;
DROP FUNCTION IF EXISTS notify_like_response() CASCADE;

-- ุญุฐู ุฌููุน ูุณุฎ ุฏุงูุฉ create_notification (ุณูุฌุฑุจ ุฌููุน ุงูุงุญุชูุงูุงุช)
DROP FUNCTION IF EXISTS create_notification() CASCADE;
DROP FUNCTION IF EXISTS create_notification(uuid) CASCADE;
DROP FUNCTION IF EXISTS create_notification(uuid, uuid) CASCADE;
DROP FUNCTION IF EXISTS create_notification(uuid, uuid, text) CASCADE;
DROP FUNCTION IF EXISTS create_notification(uuid, uuid, text, text) CASCADE;
DROP FUNCTION IF EXISTS create_notification(uuid, uuid, text, text, text) CASCADE;
DROP FUNCTION IF EXISTS create_notification(uuid, uuid, text, text, text, text) CASCADE;
DROP FUNCTION IF EXISTS create_notification(uuid, uuid, text, text, text, text, text) CASCADE;

-- ===================================
-- 3. ุฅูุดุงุก ุฏุงูุฉ create_notification ุงูุฌุฏูุฏุฉ
-- ===================================

CREATE OR REPLACE FUNCTION public.create_notification(
    p_user_id UUID,
    p_from_user_id UUID,
    p_type TEXT,
    p_title TEXT,
    p_message TEXT,
    p_action_url TEXT DEFAULT NULL,
    p_action_text TEXT DEFAULT NULL
)
RETURNS UUID AS $$
DECLARE
    notification_id UUID;
BEGIN
    INSERT INTO public.notifications (
        user_id,
        from_user_id,
        type,
        title,
        message,
        action_url,
        action_text,
        is_read,
        is_dismissed,
        created_at,
        updated_at
    ) VALUES (
        p_user_id,
        p_from_user_id,
        p_type,
        p_title,
        p_message,
        p_action_url,
        p_action_text,
        false,
        false,
        NOW(),
        NOW()
    ) RETURNING id INTO notification_id;
    
    RETURN notification_id;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- ===================================
-- 4. ุฅูุดุงุก ุฏุงูุฉ ุฅุดุนุงุฑ ุงูุฅุนุฌุงุจุงุช
-- ===================================

CREATE OR REPLACE FUNCTION public.notify_user_like()
RETURNS TRIGGER AS $$
DECLARE
    notification_id UUID;
BEGIN
    -- ุงูุชุฃูุฏ ูู ุฃู ุงููุณุชุฎุฏู ูุง ูุนุฌุจ ุจููุณู
    IF NEW.liker_id = NEW.liked_user_id THEN
        RETURN NEW;
    END IF;
    
    -- ุฅูุดุงุก ุฅุดุนุงุฑ ูููุณุชุฎุฏู ุงูุฐู ุชู ุงูุฅุนุฌุงุจ ุจู
    BEGIN
        notification_id := public.create_notification(
            NEW.liked_user_id,
            NEW.liker_id,
            'like',
            'notifications.content.like.title',
            'notifications.content.like.message',
            '/profile/' || NEW.liker_id::text,
            'notifications.content.like.actionText'
        );
        
        RAISE LOG 'ุชู ุฅูุดุงุก ุฅุดุนุงุฑ ุฅุนุฌุงุจ: % ูููุณุชุฎุฏู: % ูู: %', notification_id, NEW.liked_user_id, NEW.liker_id;
        
    EXCEPTION WHEN OTHERS THEN
        RAISE LOG 'ุฎุทุฃ ูู ุฅูุดุงุก ุฅุดุนุงุฑ ุงูุฅุนุฌุงุจ: %', SQLERRM;
    END;
    
    RETURN NEW;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- ===================================
-- 5. ุฅูุดุงุก ุฏุงูุฉ ุฅุดุนุงุฑ ูุดุงูุฏุฉ ุงูููู ุงูุดุฎุตู
-- ===================================

CREATE OR REPLACE FUNCTION public.notify_profile_view()
RETURNS TRIGGER AS $$
DECLARE
    notification_id UUID;
BEGIN
    -- ุงูุชุฃูุฏ ูู ุฃู ุงููุณุชุฎุฏู ูุง ูุดุงูุฏ ูููู ุงูุดุฎุตู
    IF NEW.viewer_id = NEW.viewed_user_id THEN
        RETURN NEW;
    END IF;
    
    -- ุฅูุดุงุก ุฅุดุนุงุฑ ูููุณุชุฎุฏู ุงูุฐู ุชู ูุดุงูุฏุฉ ูููู
    BEGIN
        notification_id := public.create_notification(
            NEW.viewed_user_id,
            NEW.viewer_id,
            'profile_view',
            'notifications.content.profileView.title',
            'notifications.content.profileView.message',
            '/profile/' || NEW.viewer_id::text,
            'notifications.content.profileView.actionText'
        );
        
        RAISE LOG 'ุชู ุฅูุดุงุก ุฅุดุนุงุฑ ูุดุงูุฏุฉ ููู: % ูููุณุชุฎุฏู: % ูู: %', notification_id, NEW.viewed_user_id, NEW.viewer_id;
        
    EXCEPTION WHEN OTHERS THEN
        RAISE LOG 'ุฎุทุฃ ูู ุฅูุดุงุก ุฅุดุนุงุฑ ูุดุงูุฏุฉ ุงูููู: %', SQLERRM;
    END;
    
    RETURN NEW;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- ===================================
-- 6. ุฅูุดุงุก ุงูู triggers ุงูุฌุฏูุฏุฉ
-- ===================================

-- trigger ููุฅุนุฌุงุจุงุช ุนูู ุฌุฏูู user_likes
CREATE TRIGGER trigger_notify_user_like
    AFTER INSERT ON public.user_likes
    FOR EACH ROW
    EXECUTE FUNCTION public.notify_user_like();

-- trigger ููุฅุนุฌุงุจุงุช ุนูู ุฌุฏูู likes (ุฅุฐุง ูุงู ูุณุชุฎุฏู)
DO $$
BEGIN
    IF EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'likes' AND table_schema = 'public') THEN
        EXECUTE 'CREATE TRIGGER trigger_notify_user_like_on_likes
            AFTER INSERT ON public.likes
            FOR EACH ROW
            EXECUTE FUNCTION public.notify_user_like()';
    END IF;
END $$;

-- trigger ููุดุงูุฏุฉ ุงููููุงุช
CREATE TRIGGER trigger_notify_profile_view
    AFTER INSERT ON public.profile_views
    FOR EACH ROW
    EXECUTE FUNCTION public.notify_profile_view();

-- ===================================
-- 7. ุฅุนุทุงุก ุงูุตูุงุญูุงุช
-- ===================================

GRANT EXECUTE ON FUNCTION public.create_notification TO authenticated;
GRANT EXECUTE ON FUNCTION public.notify_user_like TO authenticated;
GRANT EXECUTE ON FUNCTION public.notify_profile_view TO authenticated;

-- ===================================
-- 8. ุงุฎุชุจุงุฑ ุงููุธุงู
-- ===================================

DO $$
DECLARE
    test_notification_id UUID;
    test_user_id UUID := gen_random_uuid();
    test_from_user_id UUID := gen_random_uuid();
BEGIN
    BEGIN
        test_notification_id := public.create_notification(
            test_user_id,
            test_from_user_id,
            'test',
            'ุงุฎุชุจุงุฑ ุงููุธุงู',
            'ูุฐุง ุฅุดุนุงุฑ ุชุฌุฑูุจู ููุชุฃูุฏ ูู ุนูู ุงููุธุงู'
        );
        
        RAISE NOTICE 'โ ุชู ุฅูุดุงุก ุฅุดุนุงุฑ ุชุฌุฑูุจู ุจูุฌุงุญ: %', test_notification_id;
        
        DELETE FROM public.notifications WHERE id = test_notification_id;
        RAISE NOTICE '๐๏ธ ุชู ุญุฐู ุงูุฅุดุนุงุฑ ุงูุชุฌุฑูุจู';
        
    EXCEPTION WHEN OTHERS THEN
        RAISE NOTICE 'โ ุฎุทุฃ ูู ุงุฎุชุจุงุฑ ุงููุธุงู: %', SQLERRM;
    END;
END;
$$;

-- ===================================
-- 9. ุงูุชุญูู ูู ุงูู triggers ุงูุฌุฏูุฏุฉ
-- ===================================

SELECT 
    trigger_name,
    event_object_table,
    action_timing,
    event_manipulation
FROM information_schema.triggers 
WHERE trigger_name LIKE '%notify%'
ORDER BY trigger_name;

-- ===================================
-- 10. ุชูุฑูุฑ ุงููุชุงุฆุฌ
-- ===================================

DO $$
BEGIN
    RAISE NOTICE '';
    RAISE NOTICE '๐ ุชูุฑูุฑ ุฅุนุฏุงุฏ ูุธุงู ุงูุฅุดุนุงุฑุงุช ุงูุจุฑูุฏูุฉ:';
    RAISE NOTICE '';
    RAISE NOTICE '๐๏ธ ุชู ุญุฐู ุฌููุน ุงูู triggers ูุงูุฏูุงู ุงููุฏููุฉ';
    RAISE NOTICE 'โ ุชู ุฅูุดุงุก ุฏุงูุฉ create_notification ุงูุฌุฏูุฏุฉ';
    RAISE NOTICE 'โ ุชู ุฅูุดุงุก ุฏุงูุฉ notify_user_like';
    RAISE NOTICE 'โ ุชู ุฅูุดุงุก ุฏุงูุฉ notify_profile_view';
    RAISE NOTICE 'โ ุชู ุฅูุดุงุก triggers ููุฅุนุฌุงุจุงุช ููุดุงูุฏุฉ ุงููููุงุช';
    RAISE NOTICE 'โ ุชู ุฅุนุทุงุก ุงูุตูุงุญูุงุช ุงููุทููุจุฉ';
    RAISE NOTICE '';
    RAISE NOTICE '๐ฏ ุงููุธุงู ุฌุงูุฒ ุงูุขู!';
    RAISE NOTICE '';
    RAISE NOTICE '๐ ููุงุฎุชุจุงุฑ:';
    RAISE NOTICE '1. ุฌุฑุจ ุงูุฅุนุฌุงุจ ุจููู ุดุฎุตู ุขุฎุฑ';
    RAISE NOTICE '2. ุฌุฑุจ ูุดุงูุฏุฉ ููู ุดุฎุตู ุขุฎุฑ';
    RAISE NOTICE '3. ุฑุงูุจ ุงููููุณูู ููุฑุณุงุฆู:';
    RAISE NOTICE '   - "๐ง ุฅุดุนุงุฑ ุฌุฏูุฏ ุชู ุฅูุดุงุคู"';
    RAISE NOTICE '   - "๐จ ูุนุงูุฌุฉ ุฅุดุนุงุฑ ุฌุฏูุฏ ูู ููุน"';
    RAISE NOTICE '   - "โ ุชู ุฅุฑุณุงู ุฅุดุนุงุฑ ุจุฑูุฏู"';
    RAISE NOTICE '4. ุชุญูู ูู ุงูุจุฑูุฏ ุงูุฅููุชุฑููู';
    RAISE NOTICE '';
    RAISE NOTICE '๐ ุชู ุนุฑุถ ุงูู triggers ุงูุฌุฏูุฏุฉ ุฃุนูุงู ููุชุฃูุฏ';
    RAISE NOTICE '';
END;
$$;
