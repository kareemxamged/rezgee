/**
 * ูุธุงู ุชุฎุฒูู ูุคูุช ููููุงุช ุงููุฑูุฑ ุงููุคูุชุฉ ูู localStorage
 * ูุฐุง ุญู ูุคูุช ุญุชู ูุชู ุฅุตูุงุญ ูุดููุฉ ูุงุนุฏุฉ ุงูุจูุงูุงุช
 */

interface TempPasswordData {
  email: string;
  password: string;
  expiresAt: string;
  createdAt: string;
}

const STORAGE_KEY = 'temp_passwords_storage';

export class TempPasswordStorage {
  
  /**
   * ุญูุธ ูููุฉ ูุฑูุฑ ูุคูุชุฉ
   */
  static save(email: string, password: string, expiresAt: string): void {
    try {
      const data: TempPasswordData = {
        email: email.toLowerCase(),
        password,
        expiresAt,
        createdAt: new Date().toISOString()
      };
      
      // ุงูุญุตูู ุนูู ุงูุจูุงูุงุช ุงูููุฌูุฏุฉ
      const existing = this.getAll();
      
      // ุฅุฒุงูุฉ ุฃู ูููุงุช ูุฑูุฑ ูุฏููุฉ ูููุณ ุงูุจุฑูุฏ ุงูุฅููุชุฑููู
      const filtered = existing.filter(item => item.email !== email.toLowerCase());
      
      // ุฅุถุงูุฉ ูููุฉ ุงููุฑูุฑ ุงูุฌุฏูุฏุฉ
      filtered.push(data);
      
      // ุญูุธ ูู localStorage
      localStorage.setItem(STORAGE_KEY, JSON.stringify(filtered));
      
      console.log('๐พ ุชู ุญูุธ ูููุฉ ุงููุฑูุฑ ุงููุคูุชุฉ ูู localStorage:', {
        email: email.toLowerCase(),
        password,
        expiresAt
      });
      
    } catch (error) {
      console.error('โ ูุดู ูู ุญูุธ ูููุฉ ุงููุฑูุฑ ุงููุคูุชุฉ:', error);
    }
  }
  
  /**
   * ุงูุจุญุซ ุนู ูููุฉ ูุฑูุฑ ูุคูุชุฉ
   */
  static find(email: string, password: string): TempPasswordData | null {
    try {
      const all = this.getAll();
      const now = new Date();
      
      // ุงูุจุญุซ ุนู ูููุฉ ูุฑูุฑ ูุทุงุจูุฉ ูุบูุฑ ููุชููุฉ ุงูุตูุงุญูุฉ
      const found = all.find(item => 
        item.email === email.toLowerCase() && 
        item.password === password &&
        new Date(item.expiresAt) > now
      );
      
      console.log('๐ ุงูุจุญุซ ุนู ูููุฉ ูุฑูุฑ ูุคูุชุฉ:', {
        email: email.toLowerCase(),
        password,
        found: !!found,
        totalRecords: all.length
      });
      
      return found || null;
      
    } catch (error) {
      console.error('โ ูุดู ูู ุงูุจุญุซ ุนู ูููุฉ ุงููุฑูุฑ ุงููุคูุชุฉ:', error);
      return null;
    }
  }
  
  /**
   * ุญุฐู ูููุฉ ูุฑูุฑ ูุคูุชุฉ ุจุนุฏ ุงูุงุณุชุฎุฏุงู
   */
  static remove(email: string, password: string): void {
    try {
      const existing = this.getAll();
      const filtered = existing.filter(item => 
        !(item.email === email.toLowerCase() && item.password === password)
      );
      
      localStorage.setItem(STORAGE_KEY, JSON.stringify(filtered));
      
      console.log('๐๏ธ ุชู ุญุฐู ูููุฉ ุงููุฑูุฑ ุงููุคูุชุฉ ูู localStorage:', {
        email: email.toLowerCase(),
        password
      });
      
    } catch (error) {
      console.error('โ ูุดู ูู ุญุฐู ูููุฉ ุงููุฑูุฑ ุงููุคูุชุฉ:', error);
    }
  }
  
  /**
   * ุงูุญุตูู ุนูู ุฌููุน ูููุงุช ุงููุฑูุฑ ุงููุคูุชุฉ
   */
  static getAll(): TempPasswordData[] {
    try {
      const stored = localStorage.getItem(STORAGE_KEY);
      return stored ? JSON.parse(stored) : [];
    } catch (error) {
      console.error('โ ูุดู ูู ูุฑุงุกุฉ ูููุงุช ุงููุฑูุฑ ุงููุคูุชุฉ:', error);
      return [];
    }
  }
  
  /**
   * ุชูุธูู ูููุงุช ุงููุฑูุฑ ุงูููุชููุฉ ุงูุตูุงุญูุฉ
   */
  static cleanup(): void {
    try {
      const all = this.getAll();
      const now = new Date();
      
      const valid = all.filter(item => new Date(item.expiresAt) > now);
      
      localStorage.setItem(STORAGE_KEY, JSON.stringify(valid));
      
      const removed = all.length - valid.length;
      if (removed > 0) {
        console.log(`๐งน ุชู ุชูุธูู ${removed} ูููุฉ ูุฑูุฑ ููุชููุฉ ุงูุตูุงุญูุฉ`);
      }
      
    } catch (error) {
      console.error('โ ูุดู ูู ุชูุธูู ูููุงุช ุงููุฑูุฑ ุงููุคูุชุฉ:', error);
    }
  }
  
  /**
   * ุญุฐู ุฌููุน ูููุงุช ุงููุฑูุฑ ุงููุคูุชุฉ
   */
  static clear(): void {
    try {
      localStorage.removeItem(STORAGE_KEY);
      console.log('๐๏ธ ุชู ุญุฐู ุฌููุน ูููุงุช ุงููุฑูุฑ ุงููุคูุชุฉ ูู localStorage');
    } catch (error) {
      console.error('โ ูุดู ูู ุญุฐู ูููุงุช ุงููุฑูุฑ ุงููุคูุชุฉ:', error);
    }
  }
}
