// ุงุฎุชุจุงุฑ ุณุฑูุน ูููุตูู ูููููุงุช ุงูุดุฎุตูุฉ ูู ููุณ ุงูุฌูุณ
// ูููู ุชุดุบููู ูู ุงููููุณูู

// ูุณุชุฎุฏู ุฐูุฑ ูุญุงูู ุงููุตูู ูููู ุฐูุฑ ุขุฎุฑ
const testSameGenderAccess = async () => {
  console.log('๐งช ุงุฎุชุจุงุฑ ุงููุตูู ูููููุงุช ุงูุดุฎุตูุฉ ูู ููุณ ุงูุฌูุณ');
  
  // ูุนุฑูุงุช ุงููุณุชุฎุฏููู ุงูุฐููุฑ
  const maleUser1 = 'f7d18de3-9102-4c40-a01a-a34f863ce319'; // Ashraf Hamdy
  const maleUser2 = '27630074-bb7d-4c84-9922-45b21e699a8c'; // asdjds djjjjjjjj
  
  console.log(`๐ค ุงููุณุชุฎุฏู ุงูุญุงูู: ${maleUser1}`);
  console.log(`๐ฏ ุงูููู ุงููุทููุจ: ${maleUser2}`);
  
  try {
    // ุงุณุชุฏุนุงุก getPublicUserProfile
    const result = await userService.getPublicUserProfile(maleUser2, maleUser1);
    
    console.log('๐ ูุชูุฌุฉ ุงูุงุฎุชุจุงุฑ:');
    console.log('- ุงูุจูุงูุงุช:', !!result.data);
    console.log('- ุงูุฎุทุฃ:', result.error);
    
    if (result.data) {
      console.log('โ ูุฌุญ ุงููุตูู ููููู ุงูุดุฎุตู');
      console.log('- ุงูุงุณู:', result.data.first_name, result.data.last_name);
      console.log('- ุงูุฌูุณ:', result.data.gender);
    } else {
      console.log('โ ูุดู ุงููุตูู ููููู ุงูุดุฎุตู');
      console.log('- ุณุจุจ ุงููุดู:', result.error?.message || 'ุบูุฑ ูุนุฑูู');
    }
    
  } catch (error) {
    console.error('๐ฅ ุฎุทุฃ ูู ุงูุงุฎุชุจุงุฑ:', error);
  }
};

// ุชุดุบูู ุงูุงุฎุชุจุงุฑ
// testSameGenderAccess();

console.log('๐ ูุชุดุบูู ุงูุงุฎุชุจุงุฑุ ุงูุชุจ: testSameGenderAccess()');
